// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use 'node_modules/@angular/material/index' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$cyberdyne-systems-palette: (
  50:#fee8e7,
  100:#ffcabc,
  200:#ffa690,
  300:#ff8164,
  400:#ff6042,
  500:#ff3b21,
  600:#ff351d,
  700:#fb2c17,
  800:#ed2211,
  900:#d50004,
  A50:#9965b6,
  A500:#737bbb,
  A700:#6584b5,
  A900:#728e9d,
  DARK-GRAY:#636363,
  LIGHT-GRAY:#EEEEEE,
  WHITE:#FFFFFF,
  contrast: (
    50:#000000,
    100:#000000,
    200:#000000,
    300:#000000,
    400:#000000,
    500:#FFFFFF,
    600:#FFFFFF,
    700:#FFFFFF,
    800:#FFFFFF,
    900:#FFFFFF,
  )
);


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$cyberdyne-systems-primary: mat.define-palette($cyberdyne-systems-palette, 900);
$cyberdyne-systems-accent: mat.define-palette($cyberdyne-systems-palette,300);

// The warn palette is optional (defaults to red).
$cyberdyne-systems-warn: mat.define-palette(mat.$indigo-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$cyberdyne-systems-theme: mat.define-light-theme((
  color: (
    primary: $cyberdyne-systems-primary,
    accent: $cyberdyne-systems-accent,
    warn: $cyberdyne-systems-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($cyberdyne-systems-theme);


